!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BISHOP	Pieces/pieces.c	8;"	d	file:
BLOCK	Pieces/pieces.c	14;"	d	file:
COL_SPAN	includes.h	4;"	d
EMPTY	Pieces/pieces.c	5;"	d	file:
FAILED	includes.h	6;"	d
KING	Pieces/pieces.c	11;"	d	file:
KNIGHT	Pieces/pieces.c	7;"	d	file:
Move	Moves/moves.h	/^typedef struct Move {$/;"	s
Move	Moves/moves.h	/^}Move;$/;"	t	typeref:struct:Move
PAWN	Pieces/pieces.c	6;"	d	file:
QUEEN	Pieces/pieces.c	10;"	d	file:
ROOK	Pieces/pieces.c	9;"	d	file:
ROW_SPAN	includes.h	3;"	d
SUCCESS	includes.h	5;"	d
bishop_legal	Moves/moves.c	/^int bishop_legal(Move *move){$/;"	f
board	Boards/boards.h	/^typedef struct board{$/;"	s
board	Boards/boards.h	/^}board;$/;"	t	typeref:struct:board
board	UI/ui.c	/^char board[37][58] = {$/;"	v
bool	Pieces/pieces.h	/^	}bool;$/;"	t	typeref:enum:__anon1
chess_board	Boards/boards.h	/^board chess_board;$/;"	v
false	Pieces/pieces.h	/^	false,$/;"	e	enum:__anon1
final_col	Moves/moves.h	/^	uint32_t final_col;$/;"	m	struct:Move
final_row	Moves/moves.h	/^	char final_row;$/;"	m	struct:Move
get_block	Boards/boards.c	/^uint8_t get_block(uint32_t column_number, uint32_t row_val){$/;"	f
get_row	Boards/boards.c	/^uint32_t get_row(char row_alphabet){$/;"	f
i	UI/ui.c	/^int i, j;$/;"	v
identify_piece	Pieces/pieces.c	/^void identify_piece(){$/;"	f
initial_col	Moves/moves.h	/^	uint32_t initial_col;$/;"	m	struct:Move
initial_row	Moves/moves.h	/^	char initial_row;$/;"	m	struct:Move
j	UI/ui.c	/^int i, j;$/;"	v
king_legal	Moves/moves.c	/^int king_legal(Move *move){$/;"	f
knight_legal	Moves/moves.c	/^int knight_legal(Move *move){$/;"	f
legal_move_check	Moves/moves.c	/^int legal_move_check(uint8_t block_val, Move *move){$/;"	f
main	Moves/moves.c	/^int main(){$/;"	f
main	process.c	/^int main(){$/;"	f
main	src/main.c	/^int main(){$/;"	f
move	Moves/moves.h	/^Move move;$/;"	v
pawn_legal	Moves/moves.c	/^int pawn_legal(Move *move){$/;"	f
print_board	UI/ui.c	/^void print_board(){$/;"	f
queen_legal	Moves/moves.c	/^int queen_legal(Move *move){$/;"	f
rook_legal	Moves/moves.c	/^int rook_legal(Move *move){$/;"	f
row	Boards/boards.h	/^	uint32_t row[8];$/;"	m	struct:board
set_board_default	Boards/boards.c	/^void set_board_default(){ $/;"	f
true	Pieces/pieces.h	/^	true$/;"	e	enum:__anon1
